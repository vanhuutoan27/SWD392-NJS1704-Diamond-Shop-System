// <auto-generated />
using System;
using DiamonShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiamonShop.Data.Migrations
{
    [DbContext(typeof(DiamondContext))]
    [Migration("20240705133725_UpdateFKOFImage")]
    partial class UpdateFKOFImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3331),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3344),
                            Description = "Kim Cuong vien nhap khau ",
                            Name = "Diamond"
                        },
                        new
                        {
                            CategoryId = new Guid("420fcf35-560e-4fc9-86db-7ac3c5c7a38c"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3348),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3349),
                            Name = "Pendant"
                        },
                        new
                        {
                            CategoryId = new Guid("419ca5be-f464-48ab-a7f4-b756673d28af"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3350),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3351),
                            Name = "Ring"
                        },
                        new
                        {
                            CategoryId = new Guid("c9522945-fec5-417f-90da-820cc66aaf6c"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3352),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3353),
                            Name = "Bracelet"
                        },
                        new
                        {
                            CategoryId = new Guid("131ff973-ac23-49d3-8880-04498fba1fa8"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3354),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3355),
                            Name = "Earrings"
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Diamond", b =>
                {
                    b.Property<Guid>("DiamondId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Certification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clarity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fluorescence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityOfCut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("SkuID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("DiamondId");

                    b.ToTable("Diamonds");

                    b.HasData(
                        new
                        {
                            DiamondId = new Guid("e655174b-f444-4ab8-baa8-71ac382d73df"),
                            Certification = "GIA",
                            Clarity = "IF",
                            ColorLevel = "E",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3577),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3578),
                            Fluorescence = "None",
                            Price = 13500000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Good",
                            Shape = "Round",
                            Size = 4.4000000000000004,
                            SkuID = "D001",
                            Weight = 0.31
                        },
                        new
                        {
                            DiamondId = new Guid("4f5cbe8a-a04a-484f-978d-4b26d2979063"),
                            Certification = "AGS",
                            Clarity = "VS2",
                            ColorLevel = "D",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3581),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3581),
                            Fluorescence = "Faint",
                            Price = 83000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Poor",
                            Shape = "Round",
                            Size = 6.2000000000000002,
                            SkuID = "D002",
                            Weight = 2.7999999999999998
                        },
                        new
                        {
                            DiamondId = new Guid("005da949-dd83-438b-9ee9-aea012d87068"),
                            Certification = "EGL",
                            Clarity = "I2",
                            ColorLevel = "F",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3585),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3585),
                            Fluorescence = "Medium",
                            Price = 470000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Fair",
                            Shape = "Round",
                            Size = 9.0999999999999996,
                            SkuID = "D003",
                            Weight = 1.3999999999999999
                        },
                        new
                        {
                            DiamondId = new Guid("f376d66d-cf4a-4103-836f-43811290f18c"),
                            Certification = "HRD",
                            Clarity = "VVS1",
                            ColorLevel = "H",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3587),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3588),
                            Fluorescence = "Strong",
                            Price = 364000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Very Good",
                            Shape = "Emerald",
                            Size = 8.5,
                            SkuID = "D004",
                            Weight = 2.1000000000000001
                        },
                        new
                        {
                            DiamondId = new Guid("76b4bb4a-3435-4876-af7f-ffb9b0301e00"),
                            Certification = "IGI",
                            Clarity = "SL1",
                            ColorLevel = "J",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3590),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3590),
                            Fluorescence = "Faint",
                            Price = 29400000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Excellent",
                            Shape = "Emerald",
                            Size = 5.2999999999999998,
                            SkuID = "D005",
                            Weight = 3.1000000000000001
                        },
                        new
                        {
                            DiamondId = new Guid("53edc0ad-98ad-41e9-9a1b-ada8950090cb"),
                            Certification = "GIA",
                            Clarity = "SL2",
                            ColorLevel = "I",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3592),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3593),
                            Fluorescence = "Strong",
                            Price = 15900000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Very Good",
                            Shape = "Emerald",
                            Size = 4.5999999999999996,
                            SkuID = "D006",
                            Weight = 0.80000000000000004
                        },
                        new
                        {
                            DiamondId = new Guid("d2c73200-1ae0-4066-9475-0bda2e220d57"),
                            Certification = "AGS",
                            Clarity = "I2",
                            ColorLevel = "K",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3597),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3597),
                            Fluorescence = "Medium",
                            Price = 615000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Good",
                            Shape = "Heart",
                            Size = 8.6999999999999993,
                            SkuID = "D007",
                            Weight = 0.40000000000000002
                        },
                        new
                        {
                            DiamondId = new Guid("c9807cfc-98b8-4b48-9ca8-fd4c44b6933c"),
                            Certification = "EGL",
                            Clarity = "IF",
                            ColorLevel = "L",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3600),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3600),
                            Fluorescence = "None",
                            Price = 268000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Fair",
                            Shape = "Heart",
                            Size = 6.7999999999999998,
                            SkuID = "D008",
                            Weight = 0.32000000000000001
                        },
                        new
                        {
                            DiamondId = new Guid("aa298dfb-004c-4008-b0a1-c143af1d15d5"),
                            Certification = "IGI",
                            Clarity = "IF",
                            ColorLevel = "G",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3602),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3603),
                            Fluorescence = "None",
                            Price = 61000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Poor",
                            Shape = "Heart",
                            Size = 5.7999999999999998,
                            SkuID = "D009",
                            Weight = 1.1899999999999999
                        },
                        new
                        {
                            DiamondId = new Guid("87340bc6-a7cb-4a10-be79-77ae910348ef"),
                            Certification = "GIA",
                            Clarity = "VVS2",
                            ColorLevel = "M",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3605),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3605),
                            Fluorescence = "Medium",
                            Price = 26000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Excellent",
                            Shape = "Cushion",
                            Size = 5.0999999999999996,
                            SkuID = "D010",
                            Weight = 1.3
                        },
                        new
                        {
                            DiamondId = new Guid("751ea591-6934-4c48-a64b-bc64ef26c724"),
                            Certification = "HRD",
                            Clarity = "VS1",
                            ColorLevel = "E",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3608),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3608),
                            Fluorescence = "Strong",
                            Price = 668350000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Excellent",
                            Shape = "Cushion",
                            Size = 9.1999999999999993,
                            SkuID = "D011",
                            Weight = 0.59999999999999998
                        },
                        new
                        {
                            DiamondId = new Guid("b9948c96-e456-471d-b523-159b7cf3242c"),
                            Certification = "HRD",
                            Clarity = "I1",
                            ColorLevel = "K",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3616),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3617),
                            Fluorescence = "Strong",
                            Price = 392740000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Very Good",
                            Shape = "Cushion",
                            Size = 7.4000000000000004,
                            SkuID = "D012",
                            Weight = 0.69999999999999996
                        },
                        new
                        {
                            DiamondId = new Guid("27c26fa1-c62b-408b-99a3-bd36531b2a16"),
                            Certification = "AGS",
                            Clarity = "VVS2",
                            ColorLevel = "J",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3619),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3619),
                            Fluorescence = "Faint",
                            Price = 21000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Fair",
                            Shape = "Pear",
                            Size = 4.9000000000000004,
                            SkuID = "D013",
                            Weight = 2.5
                        },
                        new
                        {
                            DiamondId = new Guid("84b37cf4-2ae5-4a07-a5dc-e2703f93c129"),
                            Certification = "EGL",
                            Clarity = "VVS1",
                            ColorLevel = "K",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3621),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3621),
                            Fluorescence = "None",
                            Price = 105740000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Poor",
                            Shape = "Pear",
                            Size = 6.2999999999999998,
                            SkuID = "D014",
                            Weight = 3.2000000000000002
                        },
                        new
                        {
                            DiamondId = new Guid("48b3b08e-d266-4eec-b82c-b71c7303c446"),
                            Certification = "IGI",
                            Clarity = "I1",
                            ColorLevel = "L",
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3623),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3624),
                            Fluorescence = "Strong",
                            Price = 292740000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Good",
                            Shape = "Pear",
                            Size = 7.2000000000000002,
                            SkuID = "D015",
                            Weight = 0.90000000000000002
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("c20d846c-a73b-4356-8736-a51273667bee"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3801),
                            ProductId = new Guid("9f3519c6-1df4-4125-bbef-8e7825425dcd"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ003_1.jpg?alt=media&token=ac90a06a-e325-4d08-bf75-5d6078da28f4"
                        },
                        new
                        {
                            ImageId = new Guid("cbfbdab1-d426-49b6-ae4f-eca12e520a05"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3832),
                            ProductId = new Guid("9f3519c6-1df4-4125-bbef-8e7825425dcd"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ003_2.jpg?alt=media&token=7a80ce7c-4073-46f7-a1e9-aa9d2196bdd6"
                        },
                        new
                        {
                            ImageId = new Guid("3fb4fb9e-ed20-4393-8e3b-b3d25ec33f94"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("c2bc12a6-e878-4da0-9b70-656cc94f3316"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ003_3.jpg?alt=media&token=801a85ce-434c-4eee-9652-3672d8bb4482"
                        },
                        new
                        {
                            ImageId = new Guid("863c4cf8-8673-48df-bdf8-6a3237f1118c"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("c2bc12a6-e878-4da0-9b70-656cc94f3316"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ003_4.jpg?alt=media&token=f0761d38-c205-48d8-89fd-84039af48ddf"
                        },
                        new
                        {
                            ImageId = new Guid("997e7460-4358-49c9-82e4-80378d4ea0ac"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("af32b397-0dc4-46fa-aa7f-eb31bffd2821"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ004_1.jpg?alt=media&token=c8ef04f8-2a5e-4b64-a10e-b3693616f8a3"
                        },
                        new
                        {
                            ImageId = new Guid("e6822a5b-fddd-4e76-89ab-08cff4abcdc1"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("af32b397-0dc4-46fa-aa7f-eb31bffd2821"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ004_4.jpg?alt=media&token=164f4d10-12f3-442c-81d2-eed699c79bd5"
                        },
                        new
                        {
                            ImageId = new Guid("82e9b4ea-e6d3-4c45-a456-f78d8ffc5b43"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("4fd47f59-6149-48c2-b1ad-e454438d08c3"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring1%20m1.jpg?alt=media&token=3788a61b-0bb2-40cd-a27f-da6d6c078939"
                        },
                        new
                        {
                            ImageId = new Guid("c9785152-2cdc-493d-84a7-d0ea867a75e4"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("4fd47f59-6149-48c2-b1ad-e454438d08c3"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring1%20m2.jpg?alt=media&token=001430c6-ef62-4db7-96cf-678ebcd6dea5"
                        },
                        new
                        {
                            ImageId = new Guid("5584544e-28de-4bb1-9dd8-e4f86f488d9a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("6abb1f7d-1bab-4405-8f72-a817c2fe9b05"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring2%20m1.jpg?alt=media&token=1c3dcb9b-9ba2-49e4-a39b-c6c7fa428bc6"
                        },
                        new
                        {
                            ImageId = new Guid("686fdf4d-bb01-4691-a753-08584be02d9e"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("6abb1f7d-1bab-4405-8f72-a817c2fe9b05"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring2%20m2.jpg?alt=media&token=c7c568ef-cd9b-4889-9fc2-96e478177e97"
                        },
                        new
                        {
                            ImageId = new Guid("b4ecae5b-0bf4-46d1-969b-41bc40247c97"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e8447232-f062-423c-ac95-eaad6fc8d8b1"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring3%20m1.jpg?alt=media&token=ce8862c1-380a-479e-a0e9-58634fa2d68a"
                        },
                        new
                        {
                            ImageId = new Guid("e22af065-737f-407d-a48d-e606b66b8132"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e8447232-f062-423c-ac95-eaad6fc8d8b1"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring3%20m2.jpg?alt=media&token=235c27dd-1417-46da-82ee-af820e415790"
                        },
                        new
                        {
                            ImageId = new Guid("a5912516-72c0-4906-bb14-268aab40d850"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("361c08c6-49c7-4da0-96c3-9062acd03bff"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra1%20m1.jpg?alt=media&token=ec5d2b70-753a-4485-a892-60c5c0938615"
                        },
                        new
                        {
                            ImageId = new Guid("40568e00-a035-40bd-9487-fdb2e672b85d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("361c08c6-49c7-4da0-96c3-9062acd03bff"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra1%20m2.jpg?alt=media&token=7f01ab19-e4e8-42ea-8278-2ce5b7e50872"
                        },
                        new
                        {
                            ImageId = new Guid("944ab71e-dba1-4caf-927e-47a870261870"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("bce4345d-d1cb-4d01-b904-be38fcb9caca"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra2%20m1.jpg?alt=media&token=2144ca96-674c-454e-b5c4-9141e98af6d7"
                        },
                        new
                        {
                            ImageId = new Guid("96ef4d0c-8a58-4906-90d5-48b6ac24b220"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("bce4345d-d1cb-4d01-b904-be38fcb9caca"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra2%20m2.jpg?alt=media&token=f5167a68-4c7a-46cf-ad28-e352ab8481e5"
                        },
                        new
                        {
                            ImageId = new Guid("18a2589c-4ecc-43da-8840-dd0f2fb8a3ff"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("1876fa93-1502-4d84-93ae-5ba6301d63cb"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra3%20m1.jpg?alt=media&token=5b52cbae-c5fd-4d97-8af8-5f2d5fb6df1b"
                        },
                        new
                        {
                            ImageId = new Guid("e167ff0d-1b44-4b58-9b2a-ecae3fc227b9"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("1876fa93-1502-4d84-93ae-5ba6301d63cb"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra3%20m2.jpg?alt=media&token=33c0ae2b-4f6d-4864-879d-a1c08be6d412"
                        },
                        new
                        {
                            ImageId = new Guid("4cf90bb7-e0d3-4243-9eaa-0d96e9be62f3"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("734aab01-8668-4e5c-8afb-473b05fc52c0"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ002_1.jpg?alt=media&token=e313cc02-5436-487a-9a3b-71f4985fb733"
                        },
                        new
                        {
                            ImageId = new Guid("f4386a6f-60c9-448f-8e5f-e4cb3db412cf"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("734aab01-8668-4e5c-8afb-473b05fc52c0"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ002_2.jpg?alt=media&token=a663022d-ce58-4774-a5ea-55089b414b4f"
                        },
                        new
                        {
                            ImageId = new Guid("743c4866-3a3a-4b07-b5e4-92b0ea12bb7b"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("1cc86444-85b6-4cd7-b002-afe58ca36a39"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ001_1.jpg?alt=media&token=42eda424-48f5-4586-a7e6-fda26c5659be"
                        },
                        new
                        {
                            ImageId = new Guid("5b5042e9-763c-4c30-8c9d-0e648bc282da"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("1cc86444-85b6-4cd7-b002-afe58ca36a39"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ001_2.jpg?alt=media&token=42dc5653-5240-4df1-9b39-c4d1975defd7"
                        },
                        new
                        {
                            ImageId = new Guid("5b6eddf2-0a04-4661-92ad-737be0765f2d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("5d411445-ba01-46d2-92a4-c690f1e19db4"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ001_3.jpg?alt=media&token=fc95d920-491f-4c8d-a50a-681673bb929d"
                        },
                        new
                        {
                            ImageId = new Guid("a027e0da-60b9-4d45-801a-c032622973a3"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("5d411445-ba01-46d2-92a4-c690f1e19db4"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ002_2.jpg?alt=media&token=a663022d-ce58-4774-a5ea-55089b414b4f"
                        },
                        new
                        {
                            ImageId = new Guid("cb8fd126-659e-40ea-b757-8c86b3b6811a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e655174b-f444-4ab8-baa8-71ac382d73df"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("875cd6c6-2d34-4ea5-b116-c40dbe22fcef"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("4f5cbe8a-a04a-484f-978d-4b26d2979063"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("b1eddcd8-eafb-4d68-9d46-1686b2deb8a7"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("005da949-dd83-438b-9ee9-aea012d87068"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("2ad7cc4b-77fe-4388-9ad6-8bb3db59b62a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("f376d66d-cf4a-4103-836f-43811290f18c"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("0c2fb146-2532-49eb-92f9-c55ff34d6801"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("76b4bb4a-3435-4876-af7f-ffb9b0301e00"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("dd3e0387-07c2-4002-96df-10f94850d7d7"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("53edc0ad-98ad-41e9-9a1b-ada8950090cb"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("36c85d10-3fc4-4865-a84d-c604ca760609"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("d2c73200-1ae0-4066-9475-0bda2e220d57"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("051945d5-2b76-460c-8498-086d15bf2d11"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("c9807cfc-98b8-4b48-9ca8-fd4c44b6933c"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("f1267726-04bb-4532-8df5-609a410bdc23"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("aa298dfb-004c-4008-b0a1-c143af1d15d5"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("1dd9ad9e-a707-40f6-9a8f-a74577d0287a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("87340bc6-a7cb-4a10-be79-77ae910348ef"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("f82cfd42-8f5a-43cc-ad33-af87d8d8ea23"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("751ea591-6934-4c48-a64b-bc64ef26c724"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("64d2d7ad-c797-4da8-8742-518c75a49a7f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("b9948c96-e456-471d-b523-159b7cf3242c"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("e0b2aa50-f88f-42e1-aa82-bbbb2b951b8d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("27c26fa1-c62b-408b-99a3-bd36531b2a16"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("25e8baa8-f1da-4231-95e0-6a6658b4fbdd"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("84b37cf4-2ae5-4a07-a5dc-e2703f93c129"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("837a1564-4f70-45cc-978d-8f72a9dd28e9"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("48b3b08e-d266-4eec-b82c-b71c7303c446"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventorys");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Invoice", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AmountDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("AmountDue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("InvoiceAmount")
                        .HasColumnType("float");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusInvoice")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InvoiceId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Jewelry", b =>
                {
                    b.Property<Guid>("JewelryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoldKarat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GoldWeight")
                        .HasColumnType("float");

                    b.Property<string>("MainStoneSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkuID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StoneWeight")
                        .HasColumnType("float");

                    b.Property<int>("sideStoneQuantity")
                        .HasColumnType("int");

                    b.Property<string>("sideStoneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JewelryId");

                    b.ToTable("Jewelrys");

                    b.HasData(
                        new
                        {
                            JewelryId = new Guid("9f3519c6-1df4-4125-bbef-8e7825425dcd"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3702),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3702),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 0.53000000000000003,
                            MainStoneSize = "Round 5ly",
                            Name = "18K DIAMOND PENDANT",
                            Price = 28300000.0,
                            ProductType = "Jewelry",
                            SkuID = "J001",
                            StoneWeight = 1.1000000000000001,
                            sideStoneQuantity = 23,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("c2bc12a6-e878-4da0-9b70-656cc94f3316"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3705),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3705),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 0.60999999999999999,
                            MainStoneSize = "Round 5.1ly",
                            Name = "18K DIAMOND PENDANT",
                            Price = 31200000.0,
                            ProductType = "Jewelry",
                            SkuID = "J002",
                            StoneWeight = 1.1200000000000001,
                            sideStoneQuantity = 27,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("af32b397-0dc4-46fa-aa7f-eb31bffd2821"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3708),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3708),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 0.57999999999999996,
                            MainStoneSize = "Round 6.3ly",
                            Name = "18K DIAMOND PENDANT",
                            Price = 33450000.0,
                            ProductType = "Jewelry",
                            SkuID = "J003",
                            StoneWeight = 1.2,
                            sideStoneQuantity = 20,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("4fd47f59-6149-48c2-b1ad-e454438d08c3"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3710),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3711),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.05,
                            MainStoneSize = "Round 4.5ly",
                            Name = "18K DIAMOND RING",
                            Price = 38589000.0,
                            ProductType = "Jewelry",
                            SkuID = "J004",
                            StoneWeight = 1.0700000000000001,
                            sideStoneQuantity = 38,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("6abb1f7d-1bab-4405-8f72-a817c2fe9b05"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3713),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3713),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.0900000000000001,
                            MainStoneSize = "Round 4.0ly",
                            Name = "18K DIAMOND RING",
                            Price = 37430000.0,
                            ProductType = "Jewelry",
                            SkuID = "J005",
                            StoneWeight = 2.0,
                            sideStoneQuantity = 63,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("e8447232-f062-423c-ac95-eaad6fc8d8b1"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3715),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3716),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.1699999999999999,
                            MainStoneSize = "Round 5.2ly",
                            Name = "18K DIAMOND RING",
                            Price = 41246000.0,
                            ProductType = "Jewelry",
                            SkuID = "J006",
                            StoneWeight = 1.1000000000000001,
                            sideStoneQuantity = 2,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("361c08c6-49c7-4da0-96c3-9062acd03bff"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3718),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3718),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 6.5999999999999996,
                            MainStoneSize = "Round 5.4ly",
                            Name = "18K DIAMOND BRACELET",
                            Price = 135371000.0,
                            ProductType = "Jewelry",
                            SkuID = "J007",
                            StoneWeight = 2.2000000000000002,
                            sideStoneQuantity = 43,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("bce4345d-d1cb-4d01-b904-be38fcb9caca"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3720),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3721),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 7.0999999999999996,
                            MainStoneSize = "Round 6.3ly",
                            Name = "18K DIAMOND BRACELET",
                            Price = 148239000.0,
                            ProductType = "Jewelry",
                            SkuID = "J008",
                            StoneWeight = 2.7999999999999998,
                            sideStoneQuantity = 92,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("1876fa93-1502-4d84-93ae-5ba6301d63cb"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3723),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3723),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 5.9000000000000004,
                            MainStoneSize = "Round 6.1ly",
                            Name = "18K DIAMOND BRACELET",
                            Price = 139800000.0,
                            ProductType = "Jewelry",
                            SkuID = "J009",
                            StoneWeight = 2.7000000000000002,
                            sideStoneQuantity = 57,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("734aab01-8668-4e5c-8afb-473b05fc52c0"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3725),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3726),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.04,
                            MainStoneSize = "Round 5ly",
                            Name = "18K DIAMOND ERRINGS",
                            Price = 31317000.0,
                            ProductType = "Jewelry",
                            SkuID = "J010",
                            StoneWeight = 0.040000000000000001,
                            sideStoneQuantity = 15,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("1cc86444-85b6-4cd7-b002-afe58ca36a39"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3728),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3728),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.0800000000000001,
                            MainStoneSize = "Round 5.3ly",
                            Name = "18K DIAMOND ERRINGS",
                            Price = 47239000.0,
                            ProductType = "Jewelry",
                            SkuID = "J011",
                            StoneWeight = 0.10000000000000001,
                            sideStoneQuantity = 60,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("5d411445-ba01-46d2-92a4-c690f1e19db4"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3730),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3731),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.0700000000000001,
                            MainStoneSize = "Round 4.9ly",
                            Name = "18K DIAMOND ERRINGS",
                            Price = 44650000.0,
                            ProductType = "Jewelry",
                            SkuID = "J012",
                            StoneWeight = 0.029999999999999999,
                            sideStoneQuantity = 23,
                            sideStoneType = "Diamond"
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceiptDay")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("e655174b-f444-4ab8-baa8-71ac382d73df"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3432),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3433),
                            Description = "Kinh cương tự nhiên 100%",
                            Name = "Kim Cương Viên",
                            Price = 535790600.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("4f5cbe8a-a04a-484f-978d-4b26d2979063"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3436),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3436),
                            Description = "Kinh cương tự nhiên 99%",
                            Name = "Kim Cương Viên",
                            Price = 21924560.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("005da949-dd83-438b-9ee9-aea012d87068"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3438),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3439),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("f376d66d-cf4a-4103-836f-43811290f18c"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3442),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3442),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("76b4bb4a-3435-4876-af7f-ffb9b0301e00"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3444),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3444),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("53edc0ad-98ad-41e9-9a1b-ada8950090cb"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3446),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3447),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("d2c73200-1ae0-4066-9475-0bda2e220d57"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3449),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3449),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("c9807cfc-98b8-4b48-9ca8-fd4c44b6933c"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3451),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3451),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("aa298dfb-004c-4008-b0a1-c143af1d15d5"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3454),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3454),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("87340bc6-a7cb-4a10-be79-77ae910348ef"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3456),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3456),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("751ea591-6934-4c48-a64b-bc64ef26c724"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3459),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3459),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("b9948c96-e456-471d-b523-159b7cf3242c"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3462),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3462),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("27c26fa1-c62b-408b-99a3-bd36531b2a16"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3465),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3465),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("84b37cf4-2ae5-4a07-a5dc-e2703f93c129"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3467),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3467),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("48b3b08e-d266-4eec-b82c-b71c7303c446"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3469),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3469),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("9f3519c6-1df4-4125-bbef-8e7825425dcd"),
                            CategoryId = new Guid("420fcf35-560e-4fc9-86db-7ac3c5c7a38c"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3471),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3472),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("c2bc12a6-e878-4da0-9b70-656cc94f3316"),
                            CategoryId = new Guid("420fcf35-560e-4fc9-86db-7ac3c5c7a38c"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3473),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3474),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("af32b397-0dc4-46fa-aa7f-eb31bffd2821"),
                            CategoryId = new Guid("420fcf35-560e-4fc9-86db-7ac3c5c7a38c"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3476),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3476),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("4fd47f59-6149-48c2-b1ad-e454438d08c3"),
                            CategoryId = new Guid("419ca5be-f464-48ab-a7f4-b756673d28af"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3478),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3478),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("6abb1f7d-1bab-4405-8f72-a817c2fe9b05"),
                            CategoryId = new Guid("419ca5be-f464-48ab-a7f4-b756673d28af"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3480),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3480),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("e8447232-f062-423c-ac95-eaad6fc8d8b1"),
                            CategoryId = new Guid("419ca5be-f464-48ab-a7f4-b756673d28af"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3482),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3482),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("361c08c6-49c7-4da0-96c3-9062acd03bff"),
                            CategoryId = new Guid("c9522945-fec5-417f-90da-820cc66aaf6c"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3484),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3484),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("bce4345d-d1cb-4d01-b904-be38fcb9caca"),
                            CategoryId = new Guid("c9522945-fec5-417f-90da-820cc66aaf6c"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3486),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3487),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("1876fa93-1502-4d84-93ae-5ba6301d63cb"),
                            CategoryId = new Guid("c9522945-fec5-417f-90da-820cc66aaf6c"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3488),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3489),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("734aab01-8668-4e5c-8afb-473b05fc52c0"),
                            CategoryId = new Guid("131ff973-ac23-49d3-8880-04498fba1fa8"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3491),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3491),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("1cc86444-85b6-4cd7-b002-afe58ca36a39"),
                            CategoryId = new Guid("131ff973-ac23-49d3-8880-04498fba1fa8"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3493),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3493),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("5d411445-ba01-46d2-92a4-c690f1e19db4"),
                            CategoryId = new Guid("131ff973-ac23-49d3-8880-04498fba1fa8"),
                            DateCreated = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3495),
                            DateModified = new DateTime(2024, 7, 5, 20, 37, 24, 572, DateTimeKind.Local).AddTicks(3495),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Identity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            DisplayName = "Khách Hàng",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = new Guid("c0278115-8549-4fad-890a-44f8e8fcc022"),
                            DisplayName = "Quản Lí",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = new Guid("ab8e4032-2d95-45cc-89c1-c039e9e8bc39"),
                            DisplayName = "Nhân Viên Giao Hàng",
                            Name = "DeliveryStaff",
                            NormalizedName = "DELIVERYSTAFF"
                        },
                        new
                        {
                            Id = new Guid("1401744d-0421-41eb-b9d6-f888aaccca91"),
                            DisplayName = "Nhân Viên Bán Hàng",
                            Name = "SaleStaff",
                            NormalizedName = "SALESTAFF"
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("RoyaltyAmountPerPost")
                        .HasColumnType("float");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VipExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VipStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Diamond", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithOne("Diamond")
                        .HasForeignKey("DiamonShop.Core.Domain.Content.Diamond", "DiamondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Image", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Inventory", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithMany("Inventorys")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Invoice", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Order", "Order")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamonShop.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Jewelry", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithOne("Jewelry")
                        .HasForeignKey("DiamonShop.Core.Domain.Content.Jewelry", "JewelryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.OrderItem", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Payment", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Product", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Order", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Items");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Product", b =>
                {
                    b.Navigation("Diamond")
                        .IsRequired();

                    b.Navigation("Images");

                    b.Navigation("Inventorys");

                    b.Navigation("Jewelry")
                        .IsRequired();

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Identity.AppUser", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
