// <auto-generated />
using System;
using DiamonShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiamonShop.Data.Migrations
{
    [DbContext(typeof(DiamondContext))]
    [Migration("20240617164905_ModifiedDbContextForInvoice")]
    partial class ModifiedDbContextForInvoice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7556),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7568),
                            Description = "Kim Cuong vien nhap khau ",
                            Name = "Diamond"
                        },
                        new
                        {
                            CategoryId = new Guid("420fcf35-560e-4fc9-86db-7ac3c5c7a38c"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7573),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7573),
                            Name = "Pendant"
                        },
                        new
                        {
                            CategoryId = new Guid("419ca5be-f464-48ab-a7f4-b756673d28af"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7575),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7575),
                            Name = "Ring"
                        },
                        new
                        {
                            CategoryId = new Guid("c9522945-fec5-417f-90da-820cc66aaf6c"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7576),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7577),
                            Name = "Bracelet"
                        },
                        new
                        {
                            CategoryId = new Guid("131ff973-ac23-49d3-8880-04498fba1fa8"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7579),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7580),
                            Name = "Earrings"
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Diamond", b =>
                {
                    b.Property<Guid>("DiamondId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Certification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clarity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fluorescence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityOfCut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("SkuID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("DiamondId");

                    b.ToTable("Diamonds");

                    b.HasData(
                        new
                        {
                            DiamondId = new Guid("e655174b-f444-4ab8-baa8-71ac382d73df"),
                            Certification = "GIA",
                            Clarity = "IF",
                            ColorLevel = "E",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7828),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7828),
                            Fluorescence = "None",
                            Price = 13500000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Good",
                            Shape = "Round",
                            Size = 4.4000000000000004,
                            SkuID = "D001",
                            Weight = 0.31
                        },
                        new
                        {
                            DiamondId = new Guid("4f5cbe8a-a04a-484f-978d-4b26d2979063"),
                            Certification = "AGS",
                            Clarity = "VS2",
                            ColorLevel = "D",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7832),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7832),
                            Fluorescence = "Faint",
                            Price = 83000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Poor",
                            Shape = "Round",
                            Size = 6.2000000000000002,
                            SkuID = "D002",
                            Weight = 2.7999999999999998
                        },
                        new
                        {
                            DiamondId = new Guid("005da949-dd83-438b-9ee9-aea012d87068"),
                            Certification = "EGL",
                            Clarity = "I2",
                            ColorLevel = "F",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7835),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7835),
                            Fluorescence = "Medium",
                            Price = 470000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Fair",
                            Shape = "Round",
                            Size = 9.0999999999999996,
                            SkuID = "D003",
                            Weight = 1.3999999999999999
                        },
                        new
                        {
                            DiamondId = new Guid("f376d66d-cf4a-4103-836f-43811290f18c"),
                            Certification = "HRD",
                            Clarity = "VVS1",
                            ColorLevel = "H",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7837),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7838),
                            Fluorescence = "Strong",
                            Price = 364000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Very Good",
                            Shape = "Emerald",
                            Size = 8.5,
                            SkuID = "D004",
                            Weight = 2.1000000000000001
                        },
                        new
                        {
                            DiamondId = new Guid("76b4bb4a-3435-4876-af7f-ffb9b0301e00"),
                            Certification = "IGI",
                            Clarity = "SL1",
                            ColorLevel = "J",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7840),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7840),
                            Fluorescence = "Faint",
                            Price = 29400000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Excellent",
                            Shape = "Emerald",
                            Size = 5.2999999999999998,
                            SkuID = "D005",
                            Weight = 3.1000000000000001
                        },
                        new
                        {
                            DiamondId = new Guid("53edc0ad-98ad-41e9-9a1b-ada8950090cb"),
                            Certification = "GIA",
                            Clarity = "SL2",
                            ColorLevel = "I",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7843),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7843),
                            Fluorescence = "Strong",
                            Price = 15900000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Very Good",
                            Shape = "Emerald",
                            Size = 4.5999999999999996,
                            SkuID = "D006",
                            Weight = 0.80000000000000004
                        },
                        new
                        {
                            DiamondId = new Guid("d2c73200-1ae0-4066-9475-0bda2e220d57"),
                            Certification = "AGS",
                            Clarity = "I2",
                            ColorLevel = "K",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7845),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7846),
                            Fluorescence = "Medium",
                            Price = 615000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Good",
                            Shape = "Heart",
                            Size = 8.6999999999999993,
                            SkuID = "D007",
                            Weight = 0.40000000000000002
                        },
                        new
                        {
                            DiamondId = new Guid("c9807cfc-98b8-4b48-9ca8-fd4c44b6933c"),
                            Certification = "EGL",
                            Clarity = "IF",
                            ColorLevel = "L",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7848),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7848),
                            Fluorescence = "None",
                            Price = 268000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Fair",
                            Shape = "Heart",
                            Size = 6.7999999999999998,
                            SkuID = "D008",
                            Weight = 0.32000000000000001
                        },
                        new
                        {
                            DiamondId = new Guid("aa298dfb-004c-4008-b0a1-c143af1d15d5"),
                            Certification = "IGI",
                            Clarity = "IF",
                            ColorLevel = "G",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7851),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7851),
                            Fluorescence = "None",
                            Price = 61000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Poor",
                            Shape = "Heart",
                            Size = 5.7999999999999998,
                            SkuID = "D009",
                            Weight = 1.1899999999999999
                        },
                        new
                        {
                            DiamondId = new Guid("87340bc6-a7cb-4a10-be79-77ae910348ef"),
                            Certification = "GIA",
                            Clarity = "VVS2",
                            ColorLevel = "M",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7853),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7854),
                            Fluorescence = "Medium",
                            Price = 26000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Excellent",
                            Shape = "Cushion",
                            Size = 5.0999999999999996,
                            SkuID = "D010",
                            Weight = 1.3
                        },
                        new
                        {
                            DiamondId = new Guid("751ea591-6934-4c48-a64b-bc64ef26c724"),
                            Certification = "HRD",
                            Clarity = "VS1",
                            ColorLevel = "E",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7856),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7856),
                            Fluorescence = "Strong",
                            Price = 668350000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Excellent",
                            Shape = "Cushion",
                            Size = 9.1999999999999993,
                            SkuID = "D011",
                            Weight = 0.59999999999999998
                        },
                        new
                        {
                            DiamondId = new Guid("b9948c96-e456-471d-b523-159b7cf3242c"),
                            Certification = "HRD",
                            Clarity = "I1",
                            ColorLevel = "K",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7858),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7859),
                            Fluorescence = "Strong",
                            Price = 392740000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Very Good",
                            Shape = "Cushion",
                            Size = 7.4000000000000004,
                            SkuID = "D012",
                            Weight = 0.69999999999999996
                        },
                        new
                        {
                            DiamondId = new Guid("27c26fa1-c62b-408b-99a3-bd36531b2a16"),
                            Certification = "AGS",
                            Clarity = "VVS2",
                            ColorLevel = "J",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7861),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7861),
                            Fluorescence = "Faint",
                            Price = 21000000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Fair",
                            Shape = "Pear",
                            Size = 4.9000000000000004,
                            SkuID = "D013",
                            Weight = 2.5
                        },
                        new
                        {
                            DiamondId = new Guid("84b37cf4-2ae5-4a07-a5dc-e2703f93c129"),
                            Certification = "EGL",
                            Clarity = "VVS1",
                            ColorLevel = "K",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7864),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7864),
                            Fluorescence = "None",
                            Price = 105740000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Poor",
                            Shape = "Pear",
                            Size = 6.2999999999999998,
                            SkuID = "D014",
                            Weight = 3.2000000000000002
                        },
                        new
                        {
                            DiamondId = new Guid("48b3b08e-d266-4eec-b82c-b71c7303c446"),
                            Certification = "IGI",
                            Clarity = "I1",
                            ColorLevel = "L",
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7866),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7866),
                            Fluorescence = "Strong",
                            Price = 292740000.0,
                            ProductType = "Diamond",
                            QualityOfCut = "Good",
                            Shape = "Pear",
                            Size = 7.2000000000000002,
                            SkuID = "D015",
                            Weight = 0.90000000000000002
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("c20d846c-a73b-4356-8736-a51273667bee"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(8046),
                            ProductId = new Guid("9f3519c6-1df4-4125-bbef-8e7825425dcd"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ003_1.jpg?alt=media&token=ac90a06a-e325-4d08-bf75-5d6078da28f4"
                        },
                        new
                        {
                            ImageId = new Guid("b8986286-71e8-4b13-9eea-4dbdcbd88185"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(8073),
                            ProductId = new Guid("9f3519c6-1df4-4125-bbef-8e7825425dcd"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ003_2.jpg?alt=media&token=7a80ce7c-4073-46f7-a1e9-aa9d2196bdd6"
                        },
                        new
                        {
                            ImageId = new Guid("7dfde50c-0df9-46ac-a210-bf09dfdfb242"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("c2bc12a6-e878-4da0-9b70-656cc94f3316"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ003_3.jpg?alt=media&token=801a85ce-434c-4eee-9652-3672d8bb4482"
                        },
                        new
                        {
                            ImageId = new Guid("2aa2e44f-4bcd-4528-866b-8535d8509c25"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("c2bc12a6-e878-4da0-9b70-656cc94f3316"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ003_4.jpg?alt=media&token=f0761d38-c205-48d8-89fd-84039af48ddf"
                        },
                        new
                        {
                            ImageId = new Guid("b3aaf79e-e2d3-4f50-aac9-a06fda4bc1b9"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("af32b397-0dc4-46fa-aa7f-eb31bffd2821"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ004_1.jpg?alt=media&token=c8ef04f8-2a5e-4b64-a10e-b3693616f8a3"
                        },
                        new
                        {
                            ImageId = new Guid("4e466ba8-5348-47f1-a80c-0aafae539238"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("af32b397-0dc4-46fa-aa7f-eb31bffd2821"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ004_4.jpg?alt=media&token=164f4d10-12f3-442c-81d2-eed699c79bd5"
                        },
                        new
                        {
                            ImageId = new Guid("6f04178f-1dcd-4853-9135-0916db53a5aa"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("4fd47f59-6149-48c2-b1ad-e454438d08c3"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring1%20m1.jpg?alt=media&token=3788a61b-0bb2-40cd-a27f-da6d6c078939"
                        },
                        new
                        {
                            ImageId = new Guid("790d0507-6794-4e59-b860-b8abef91de28"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("4fd47f59-6149-48c2-b1ad-e454438d08c3"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring1%20m2.jpg?alt=media&token=001430c6-ef62-4db7-96cf-678ebcd6dea5"
                        },
                        new
                        {
                            ImageId = new Guid("6f74b005-0d40-4405-a97b-74d5eff50938"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("6abb1f7d-1bab-4405-8f72-a817c2fe9b05"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring2%20m1.jpg?alt=media&token=1c3dcb9b-9ba2-49e4-a39b-c6c7fa428bc6"
                        },
                        new
                        {
                            ImageId = new Guid("a8adb7fd-966d-481b-a7d7-bc966e270169"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("6abb1f7d-1bab-4405-8f72-a817c2fe9b05"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring2%20m2.jpg?alt=media&token=c7c568ef-cd9b-4889-9fc2-96e478177e97"
                        },
                        new
                        {
                            ImageId = new Guid("1b86383e-e4f4-4b55-8d9e-98019cb89f97"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e8447232-f062-423c-ac95-eaad6fc8d8b1"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring3%20m1.jpg?alt=media&token=ce8862c1-380a-479e-a0e9-58634fa2d68a"
                        },
                        new
                        {
                            ImageId = new Guid("9c101f07-658c-44bb-b490-5f3e645434a4"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e8447232-f062-423c-ac95-eaad6fc8d8b1"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fring3%20m2.jpg?alt=media&token=235c27dd-1417-46da-82ee-af820e415790"
                        },
                        new
                        {
                            ImageId = new Guid("877439e4-4bc9-4f29-972e-68deaf272c2c"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("361c08c6-49c7-4da0-96c3-9062acd03bff"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra1%20m1.jpg?alt=media&token=ec5d2b70-753a-4485-a892-60c5c0938615"
                        },
                        new
                        {
                            ImageId = new Guid("0562e5a5-9b6e-4aff-8106-40c2a36af4c1"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("361c08c6-49c7-4da0-96c3-9062acd03bff"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra1%20m2.jpg?alt=media&token=7f01ab19-e4e8-42ea-8278-2ce5b7e50872"
                        },
                        new
                        {
                            ImageId = new Guid("4f3b7acf-0c15-4998-93de-fe91b56344bf"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("bce4345d-d1cb-4d01-b904-be38fcb9caca"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra2%20m1.jpg?alt=media&token=2144ca96-674c-454e-b5c4-9141e98af6d7"
                        },
                        new
                        {
                            ImageId = new Guid("f5b47716-04f4-4fd5-9972-8776a062c2a4"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("bce4345d-d1cb-4d01-b904-be38fcb9caca"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra2%20m2.jpg?alt=media&token=f5167a68-4c7a-46cf-ad28-e352ab8481e5"
                        },
                        new
                        {
                            ImageId = new Guid("4a7c71fb-087d-4c2d-8cae-fa55aeebfcc5"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("1876fa93-1502-4d84-93ae-5ba6301d63cb"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra3%20m1.jpg?alt=media&token=5b52cbae-c5fd-4d97-8af8-5f2d5fb6df1b"
                        },
                        new
                        {
                            ImageId = new Guid("4ca8b9f1-d2d8-4a7f-8518-29e3c45337ec"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("1876fa93-1502-4d84-93ae-5ba6301d63cb"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2Fbra3%20m2.jpg?alt=media&token=33c0ae2b-4f6d-4864-879d-a1c08be6d412"
                        },
                        new
                        {
                            ImageId = new Guid("45f21df4-78c6-4aef-b873-bf33d64ee6b7"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("734aab01-8668-4e5c-8afb-473b05fc52c0"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ002_1.jpg?alt=media&token=e313cc02-5436-487a-9a3b-71f4985fb733"
                        },
                        new
                        {
                            ImageId = new Guid("375274b1-98e6-4250-b2da-680fffa00b18"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("734aab01-8668-4e5c-8afb-473b05fc52c0"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ002_2.jpg?alt=media&token=a663022d-ce58-4774-a5ea-55089b414b4f"
                        },
                        new
                        {
                            ImageId = new Guid("65a8cc36-bce5-4835-9df9-f5b9418d17c3"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("1cc86444-85b6-4cd7-b002-afe58ca36a39"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ001_1.jpg?alt=media&token=42eda424-48f5-4586-a7e6-fda26c5659be"
                        },
                        new
                        {
                            ImageId = new Guid("99f75ec6-4682-45d3-9f8c-df6817be287f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("1cc86444-85b6-4cd7-b002-afe58ca36a39"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ001_2.jpg?alt=media&token=42dc5653-5240-4df1-9b39-c4d1975defd7"
                        },
                        new
                        {
                            ImageId = new Guid("6eba9c01-3cab-45fd-a9aa-1b7f83b5cc26"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("5d411445-ba01-46d2-92a4-c690f1e19db4"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ001_3.jpg?alt=media&token=fc95d920-491f-4c8d-a50a-681673bb929d"
                        },
                        new
                        {
                            ImageId = new Guid("b77a9e78-595c-46f4-b489-acdccd583b0d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("5d411445-ba01-46d2-92a4-c690f1e19db4"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FJewelry%2FJ002_2.jpg?alt=media&token=a663022d-ce58-4774-a5ea-55089b414b4f"
                        },
                        new
                        {
                            ImageId = new Guid("07981035-9535-4080-bf9e-829c91a51779"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e655174b-f444-4ab8-baa8-71ac382d73df"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("86b91be2-8a38-4dbe-ba12-b7aebcb0ec18"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("4f5cbe8a-a04a-484f-978d-4b26d2979063"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("48214c5e-d9e0-490d-a163-8f2f3fd07813"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("005da949-dd83-438b-9ee9-aea012d87068"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("4c3ae44b-8bdd-4780-acf1-8ed3272135fc"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("f376d66d-cf4a-4103-836f-43811290f18c"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("49e4c888-2e1e-4a00-bdba-8f834abc7154"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("76b4bb4a-3435-4876-af7f-ffb9b0301e00"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("c9523869-5611-4553-9a57-3f2b3d16676a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("53edc0ad-98ad-41e9-9a1b-ada8950090cb"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("c814b47a-a3e8-432e-a6dd-9607b60d3611"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("d2c73200-1ae0-4066-9475-0bda2e220d57"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("f436b5f9-2292-4500-bc25-f2a50ee0f572"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("c9807cfc-98b8-4b48-9ca8-fd4c44b6933c"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("8b56b8d0-c186-4828-a9f1-eaaf033d78b8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("aa298dfb-004c-4008-b0a1-c143af1d15d5"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("d747bf77-15f9-45e4-ae4b-522586945f3a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("87340bc6-a7cb-4a10-be79-77ae910348ef"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("ddbcb8a0-1599-4d7f-ae27-bf8a6ff4de12"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("751ea591-6934-4c48-a64b-bc64ef26c724"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("c47dbb87-d92b-44aa-a619-5124b79ec972"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("b9948c96-e456-471d-b523-159b7cf3242c"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("1a3f4b95-31bd-422c-90b7-f7b7a5ff4c50"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("27c26fa1-c62b-408b-99a3-bd36531b2a16"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("e42c7ca7-5ccd-48c2-b659-6c9006645d5c"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("84b37cf4-2ae5-4a07-a5dc-e2703f93c129"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        },
                        new
                        {
                            ImageId = new Guid("645126ae-2a68-4039-8b31-454cdd02c0b8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("48b3b08e-d266-4eec-b82c-b71c7303c446"),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Products%2FDiamond%2Fdiamond.png?alt=media&token=0a3f7a6f-6f7d-45b3-99b9-f4717fb440f6&fbclid=IwZXh0bgNhZW0CMTAAAR2BcnXK45vA0Hoaapnnbbry7cLNcLop1j5G_VmrBL5HVPoW7Zj_AdjMPqc_aem_AUveMTOkzhDuBxi0Ft2E2QW9v2U1zN_JvweIS3dCfF3aWJajWV7gSkVP3y7xnTP2BSD3kFBLJ_66oQLMy-yRkVrm"
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventorys");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Invoice", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AmountDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("AmountDue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("InvoiceAmount")
                        .HasColumnType("float");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusInvoice")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InvoiceId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Jewelry", b =>
                {
                    b.Property<Guid>("JewelryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoldKarat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GoldWeight")
                        .HasColumnType("float");

                    b.Property<string>("MainStoneSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkuID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StoneWeight")
                        .HasColumnType("float");

                    b.Property<int>("sideStoneQuantity")
                        .HasColumnType("int");

                    b.Property<string>("sideStoneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JewelryId");

                    b.ToTable("Jewelrys");

                    b.HasData(
                        new
                        {
                            JewelryId = new Guid("9f3519c6-1df4-4125-bbef-8e7825425dcd"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7942),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7942),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 0.53000000000000003,
                            MainStoneSize = "Round 5ly",
                            Name = "18K DIAMOND PENDANT",
                            Price = 28300000.0,
                            ProductType = "Jewelry",
                            SkuID = "J001",
                            StoneWeight = 1.1000000000000001,
                            sideStoneQuantity = 23,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("c2bc12a6-e878-4da0-9b70-656cc94f3316"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7946),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7946),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 0.60999999999999999,
                            MainStoneSize = "Round 5.1ly",
                            Name = "18K DIAMOND PENDANT",
                            Price = 31200000.0,
                            ProductType = "Jewelry",
                            SkuID = "J002",
                            StoneWeight = 1.1200000000000001,
                            sideStoneQuantity = 27,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("af32b397-0dc4-46fa-aa7f-eb31bffd2821"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7948),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7949),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 0.57999999999999996,
                            MainStoneSize = "Round 6.3ly",
                            Name = "18K DIAMOND PENDANT",
                            Price = 33450000.0,
                            ProductType = "Jewelry",
                            SkuID = "J003",
                            StoneWeight = 1.2,
                            sideStoneQuantity = 20,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("4fd47f59-6149-48c2-b1ad-e454438d08c3"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7951),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7951),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.05,
                            MainStoneSize = "Round 4.5ly",
                            Name = "18K DIAMOND RING",
                            Price = 38589000.0,
                            ProductType = "Jewelry",
                            SkuID = "J004",
                            StoneWeight = 1.0700000000000001,
                            sideStoneQuantity = 38,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("6abb1f7d-1bab-4405-8f72-a817c2fe9b05"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7954),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7954),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.0900000000000001,
                            MainStoneSize = "Round 4.0ly",
                            Name = "18K DIAMOND RING",
                            Price = 37430000.0,
                            ProductType = "Jewelry",
                            SkuID = "J005",
                            StoneWeight = 2.0,
                            sideStoneQuantity = 63,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("e8447232-f062-423c-ac95-eaad6fc8d8b1"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7957),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7957),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.1699999999999999,
                            MainStoneSize = "Round 5.2ly",
                            Name = "18K DIAMOND RING",
                            Price = 41246000.0,
                            ProductType = "Jewelry",
                            SkuID = "J006",
                            StoneWeight = 1.1000000000000001,
                            sideStoneQuantity = 2,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("361c08c6-49c7-4da0-96c3-9062acd03bff"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7959),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7960),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 6.5999999999999996,
                            MainStoneSize = "Round 5.4ly",
                            Name = "18K DIAMOND BRACELET",
                            Price = 135371000.0,
                            ProductType = "Jewelry",
                            SkuID = "J007",
                            StoneWeight = 2.2000000000000002,
                            sideStoneQuantity = 43,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("bce4345d-d1cb-4d01-b904-be38fcb9caca"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7962),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7962),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 7.0999999999999996,
                            MainStoneSize = "Round 6.3ly",
                            Name = "18K DIAMOND BRACELET",
                            Price = 148239000.0,
                            ProductType = "Jewelry",
                            SkuID = "J008",
                            StoneWeight = 2.7999999999999998,
                            sideStoneQuantity = 92,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("1876fa93-1502-4d84-93ae-5ba6301d63cb"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7965),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7965),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 5.9000000000000004,
                            MainStoneSize = "Round 6.1ly",
                            Name = "18K DIAMOND BRACELET",
                            Price = 139800000.0,
                            ProductType = "Jewelry",
                            SkuID = "J009",
                            StoneWeight = 2.7000000000000002,
                            sideStoneQuantity = 57,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("734aab01-8668-4e5c-8afb-473b05fc52c0"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7967),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7968),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.04,
                            MainStoneSize = "Round 5ly",
                            Name = "18K DIAMOND ERRINGS",
                            Price = 31317000.0,
                            ProductType = "Jewelry",
                            SkuID = "J010",
                            StoneWeight = 0.040000000000000001,
                            sideStoneQuantity = 15,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("1cc86444-85b6-4cd7-b002-afe58ca36a39"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7970),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7970),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.0800000000000001,
                            MainStoneSize = "Round 5.3ly",
                            Name = "18K DIAMOND ERRINGS",
                            Price = 47239000.0,
                            ProductType = "Jewelry",
                            SkuID = "J011",
                            StoneWeight = 0.10000000000000001,
                            sideStoneQuantity = 60,
                            sideStoneType = "Diamond"
                        },
                        new
                        {
                            JewelryId = new Guid("5d411445-ba01-46d2-92a4-c690f1e19db4"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7973),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7973),
                            GoldKarat = "18K",
                            GoldType = "White gold",
                            GoldWeight = 1.0700000000000001,
                            MainStoneSize = "Round 4.9ly",
                            Name = "18K DIAMOND ERRINGS",
                            Price = 44650000.0,
                            ProductType = "Jewelry",
                            SkuID = "J012",
                            StoneWeight = 0.029999999999999999,
                            sideStoneQuantity = 23,
                            sideStoneType = "Diamond"
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceiptDay")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("e655174b-f444-4ab8-baa8-71ac382d73df"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7660),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7661),
                            Description = "Kinh cương tự nhiên 100%",
                            Name = "Kim Cương Viên",
                            Price = 535790600.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("4f5cbe8a-a04a-484f-978d-4b26d2979063"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7663),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7664),
                            Description = "Kinh cương tự nhiên 99%",
                            Name = "Kim Cương Viên",
                            Price = 21924560.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("005da949-dd83-438b-9ee9-aea012d87068"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7666),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7666),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("f376d66d-cf4a-4103-836f-43811290f18c"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7668),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7668),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("76b4bb4a-3435-4876-af7f-ffb9b0301e00"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7670),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7671),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("53edc0ad-98ad-41e9-9a1b-ada8950090cb"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7673),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7673),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("d2c73200-1ae0-4066-9475-0bda2e220d57"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7677),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7677),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("c9807cfc-98b8-4b48-9ca8-fd4c44b6933c"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7679),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7680),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("aa298dfb-004c-4008-b0a1-c143af1d15d5"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7682),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7682),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("87340bc6-a7cb-4a10-be79-77ae910348ef"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7684),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7684),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("751ea591-6934-4c48-a64b-bc64ef26c724"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7686),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7686),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("b9948c96-e456-471d-b523-159b7cf3242c"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7688),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7689),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("27c26fa1-c62b-408b-99a3-bd36531b2a16"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7691),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7691),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("84b37cf4-2ae5-4a07-a5dc-e2703f93c129"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7693),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7693),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("48b3b08e-d266-4eec-b82c-b71c7303c446"),
                            CategoryId = new Guid("816f2393-683e-428c-a4bb-2ba6e2e3f791"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7695),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7696),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Kim Cương Viên",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("9f3519c6-1df4-4125-bbef-8e7825425dcd"),
                            CategoryId = new Guid("420fcf35-560e-4fc9-86db-7ac3c5c7a38c"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7698),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7698),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("c2bc12a6-e878-4da0-9b70-656cc94f3316"),
                            CategoryId = new Guid("420fcf35-560e-4fc9-86db-7ac3c5c7a38c"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7700),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7700),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("af32b397-0dc4-46fa-aa7f-eb31bffd2821"),
                            CategoryId = new Guid("420fcf35-560e-4fc9-86db-7ac3c5c7a38c"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7702),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7703),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("4fd47f59-6149-48c2-b1ad-e454438d08c3"),
                            CategoryId = new Guid("419ca5be-f464-48ab-a7f4-b756673d28af"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7705),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7705),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("6abb1f7d-1bab-4405-8f72-a817c2fe9b05"),
                            CategoryId = new Guid("419ca5be-f464-48ab-a7f4-b756673d28af"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7707),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7707),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("e8447232-f062-423c-ac95-eaad6fc8d8b1"),
                            CategoryId = new Guid("419ca5be-f464-48ab-a7f4-b756673d28af"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7709),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7710),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("361c08c6-49c7-4da0-96c3-9062acd03bff"),
                            CategoryId = new Guid("c9522945-fec5-417f-90da-820cc66aaf6c"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7711),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7712),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("bce4345d-d1cb-4d01-b904-be38fcb9caca"),
                            CategoryId = new Guid("c9522945-fec5-417f-90da-820cc66aaf6c"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7714),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7714),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("1876fa93-1502-4d84-93ae-5ba6301d63cb"),
                            CategoryId = new Guid("c9522945-fec5-417f-90da-820cc66aaf6c"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7716),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7716),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("734aab01-8668-4e5c-8afb-473b05fc52c0"),
                            CategoryId = new Guid("131ff973-ac23-49d3-8880-04498fba1fa8"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7718),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7718),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("1cc86444-85b6-4cd7-b002-afe58ca36a39"),
                            CategoryId = new Guid("131ff973-ac23-49d3-8880-04498fba1fa8"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7726),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7726),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        },
                        new
                        {
                            ProductId = new Guid("5d411445-ba01-46d2-92a4-c690f1e19db4"),
                            CategoryId = new Guid("131ff973-ac23-49d3-8880-04498fba1fa8"),
                            DateCreated = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7728),
                            DateModified = new DateTime(2024, 6, 17, 23, 49, 4, 840, DateTimeKind.Local).AddTicks(7729),
                            Description = "Kinh cương tự nhiên 98%",
                            Name = "Jewelry",
                            Price = 32422800.0,
                            Status = 1
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Identity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            DisplayName = "Khách Hàng",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = new Guid("c0278115-8549-4fad-890a-44f8e8fcc022"),
                            DisplayName = "Quản Lí",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = new Guid("ab8e4032-2d95-45cc-89c1-c039e9e8bc39"),
                            DisplayName = "Nhân Viên Giao Hàng",
                            Name = "DeliveryStaff",
                            NormalizedName = "DELIVERYSTAFF"
                        },
                        new
                        {
                            Id = new Guid("1401744d-0421-41eb-b9d6-f888aaccca91"),
                            DisplayName = "Nhân Viên Bán Hàng",
                            Name = "SaleStaff",
                            NormalizedName = "SALESTAFF"
                        });
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("RoyaltyAmountPerPost")
                        .HasColumnType("float");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VipExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VipStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Diamond", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithOne("Diamond")
                        .HasForeignKey("DiamonShop.Core.Domain.Content.Diamond", "DiamondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Image", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Inventory", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithMany("Inventorys")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Invoice", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Order", "Order")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamonShop.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Jewelry", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithOne("Jewelry")
                        .HasForeignKey("DiamonShop.Core.Domain.Content.Jewelry", "JewelryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.OrderItem", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamonShop.Core.Domain.Content.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Payment", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Product", b =>
                {
                    b.HasOne("DiamonShop.Core.Domain.Content.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Order", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Items");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Content.Product", b =>
                {
                    b.Navigation("Diamond")
                        .IsRequired();

                    b.Navigation("Images");

                    b.Navigation("Inventorys");

                    b.Navigation("Jewelry")
                        .IsRequired();

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DiamonShop.Core.Domain.Identity.AppUser", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
